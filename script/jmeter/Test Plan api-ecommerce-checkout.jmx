<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan api-ecommerce-checkout" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request /authorize-sale 8181" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;channelCode&quot;: &quot;${__chooseRandom(WEB,APP,STR,SLF)}&quot;,&#xd;
    &quot;companyCode&quot;: &quot;${companyCodeVar}&quot;,&#xd;
    &quot;storeCode&quot;: &quot;${storeCodeVar}&quot;,&#xd;
    &quot;pos&quot;: ${posVar},&#xd;
    &quot;orderNumber&quot;: &quot;${orderNumberVar}&quot;,&#xd;
    &quot;totalValue&quot;: 105.04,&#xd;
    &quot;freightValue&quot;: ${__chooseRandom(5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.04)},&#xd;
    &quot;customer&quot;: {&#xd;
        &quot;name&quot;: &quot;${__chooseRandom(Martin Kauê Lopes,Ana,Bruno,Carlos,Daniela,Elisa,Fernando,Gabriela,Henrique,Isabela,João,Lucas,Mariana,Nathan,Olívia,Sérgio,Tatiane,Vinícius)}&quot;,&#xd;
        &quot;document&quot;: &quot;60778532402&quot;,&#xd;
        &quot;documentType&quot;: &quot;CPF&quot;,&#xd;
        &quot;address&quot;: &quot;Rua Projetada 913&quot;,&#xd;
        &quot;addressNumber&quot;: &quot;622&quot;,&#xd;
        &quot;addressComplement&quot;: &quot;Apt 202&quot;,&#xd;
        &quot;neighborhood&quot;: &quot;Antares&quot;,&#xd;
        &quot;city&quot;: ${__chooseRandom(&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,null)},&#xd;
        &quot;state&quot;: &quot;AL&quot;,&#xd;
        &quot;country&quot;: &quot;Brasil&quot;,&#xd;
        &quot;zipCode&quot;: &quot;57048434&quot;,&#xd;
        &quot;phone&quot;: &quot;82${__RandomString(9, 0123456789)}&quot;,&#xd;
        &quot;email&quot;: &quot;martin_lopes@rafaelmarin.net&quot;&#xd;
    },&#xd;
    &quot;items&quot;: [&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933111)},&#xd;
            &quot;quantity&quot;: 1,&#xd;
            &quot;value&quot;: 7.09&#xd;
        },&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202222)},&#xd;
            &quot;quantity&quot;: 2,&#xd;
            &quot;value&quot;: 17.68&#xd;
        },&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657333)},&#xd;
            &quot;quantity&quot;: 3,&#xd;
            &quot;value&quot;: 19.18&#xd;
        }&#xd;
    ],&#xd;
    &quot;payments&quot;: [&#xd;
        {&#xd;
            &quot;paymentMethod&quot;: &quot;${__chooseRandom(CREDIT,DEBIT,CASH,PIX)}&quot;,&#xd;
            &quot;paymentDate&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss,)}&quot;,&#xd;
            &quot;authorizationCode&quot;: &quot;${authorizationCodeVar}&quot;,&#xd;
            &quot;cardNumber&quot;: ${cardNumberVar},&#xd;
            &quot;pixKey&quot;: &quot;82${__RandomString(9, 0123456789)}&quot;,&#xd;
            &quot;value&quot;: ${__chooseRandom(105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.03)}&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">8181</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">authorize-sale</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request /authorize-sale 8282" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;channelCode&quot;: &quot;${__chooseRandom(WEB,APP,STR,SLF)}&quot;,&#xd;
    &quot;companyCode&quot;: &quot;${companyCodeVar}&quot;,&#xd;
    &quot;storeCode&quot;: &quot;${storeCodeVar}&quot;,&#xd;
    &quot;pos&quot;: ${posVar},&#xd;
    &quot;orderNumber&quot;: &quot;${orderNumberVar}&quot;,&#xd;
    &quot;totalValue&quot;: 105.04,&#xd;
    &quot;freightValue&quot;: ${__chooseRandom(5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.05,5.04)},&#xd;
    &quot;customer&quot;: {&#xd;
        &quot;name&quot;: &quot;${__chooseRandom(Martin Kauê Lopes,Ana,Bruno,Carlos,Daniela,Elisa,Fernando,Gabriela,Henrique,Isabela,João,Lucas,Mariana,Nathan,Olívia,Sérgio,Tatiane,Vinícius)}&quot;,&#xd;
        &quot;document&quot;: &quot;60778532402&quot;,&#xd;
        &quot;documentType&quot;: &quot;CPF&quot;,&#xd;
        &quot;address&quot;: &quot;Rua Projetada 913&quot;,&#xd;
        &quot;addressNumber&quot;: &quot;622&quot;,&#xd;
        &quot;addressComplement&quot;: &quot;Apt 202&quot;,&#xd;
        &quot;neighborhood&quot;: &quot;Antares&quot;,&#xd;
        &quot;city&quot;: ${__chooseRandom(&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,&quot;Maceió&quot;,null)},&#xd;
        &quot;state&quot;: &quot;AL&quot;,&#xd;
        &quot;country&quot;: &quot;Brasil&quot;,&#xd;
        &quot;zipCode&quot;: &quot;57048434&quot;,&#xd;
        &quot;phone&quot;: &quot;82${__RandomString(9, 0123456789)}&quot;,&#xd;
        &quot;email&quot;: &quot;martin_lopes@rafaelmarin.net&quot;&#xd;
    },&#xd;
    &quot;items&quot;: [&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933559,100231933111)},&#xd;
            &quot;quantity&quot;: 1,&#xd;
            &quot;value&quot;: 7.09&#xd;
        },&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202305,874631202222)},&#xd;
            &quot;quantity&quot;: 2,&#xd;
            &quot;value&quot;: 17.68&#xd;
        },&#xd;
        {&#xd;
            &quot;code&quot;: ${__chooseRandom(392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657819,392084657333)},&#xd;
            &quot;quantity&quot;: 3,&#xd;
            &quot;value&quot;: 19.18&#xd;
        }&#xd;
    ],&#xd;
    &quot;payments&quot;: [&#xd;
        {&#xd;
            &quot;paymentMethod&quot;: &quot;${__chooseRandom(CREDIT,DEBIT,CASH,PIX)}&quot;,&#xd;
            &quot;paymentDate&quot;: &quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss,)}&quot;,&#xd;
            &quot;authorizationCode&quot;: &quot;${authorizationCodeVar}&quot;,&#xd;
            &quot;cardNumber&quot;: ${cardNumberVar},&#xd;
            &quot;pixKey&quot;: &quot;82${__RandomString(9, 0123456789)}&quot;,&#xd;
            &quot;value&quot;: ${__chooseRandom(105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.04,105.03)}&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">8282</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">authorize-sale</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="orderNumberVar" enabled="true">
        <stringProp name="variableName">orderNumberVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">100000000</stringProp>
        <stringProp name="maximumValue">999999999</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="companyCodeVar" enabled="true">
        <stringProp name="variableName">companyCodeVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">100</stringProp>
        <stringProp name="maximumValue">999</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="storeCodeVar" enabled="true">
        <stringProp name="variableName">storeCodeVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">100</stringProp>
        <stringProp name="maximumValue">999</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="posVar" enabled="true">
        <stringProp name="variableName">posVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">500</stringProp>
        <stringProp name="maximumValue">599</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="authorizationCodeVar" enabled="true">
        <stringProp name="variableName">authorizationCodeVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">100000</stringProp>
        <stringProp name="maximumValue">999999</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="cardNumberVar" enabled="true">
        <stringProp name="variableName">cardNumberVar</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">1000000000000000</stringProp>
        <stringProp name="maximumValue">9999999999999999</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
